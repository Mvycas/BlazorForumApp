@page "/Register"
@using Domain.Models
@using Domain.Contracts


@inject IUser _userService;
@inject NavigationManager navigationManager

<AuthorizeView>
    <NotAuthorized>
        <div class="card">
            <h3>Register user</h3>
            <div class="field">
                <label>User name:</label>
                <input type="text" @bind="user.UserName"/>
            </div>
            <div class="field">
                <label style="text-align: center">Password:</label>
                <input type="password" @bind="user.Password"/>
            </div>
            @if (!string.IsNullOrEmpty(errorLabel))
                        {
                            <div class="field">
                                <label style="color: red">
                                    @errorLabel
                                </label>
                            </div>
                        }
            <div class="field">
                <button class="registerBtn" @onclick="RegisterAsync">Register</button>
            </div>
        </div>
        
    </NotAuthorized>
   
</AuthorizeView>

@code {
    private User user = new User();
    private String? errorLabel;

    private async Task RegisterAsync()
    {
       
        try
        {
            user.Role = "NewUser";
            user.SecurityLevel = "2";
            await _userService.AddUser(user);
            navigationManager.NavigateTo("/Login");
        }
        catch (Exception e)
        {
            errorLabel = $"Error: {e.Message}";
        }
    }
}